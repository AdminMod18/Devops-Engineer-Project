name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy_infra:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.1

      - name: Initialize Terraform
        run: |
          cd terraform
          rm -rf .terraform  # Eliminar cualquier configuración anterior
          terraform init -reconfigure -upgrade

      - name: Fix Terraform Provider Permissions
        run: |
          cd terraform
          chmod -R +x .terraform  # Dar permisos de ejecución a todos los binarios de Terraform

      - name: Apply Terraform Configuration
        run: |
          cd terraform
          terraform apply -auto-approve || (terraform init -force-copy && terraform apply -auto-approve)

      - name: Debug Terraform (If Apply Fails)
        if: failure()
        run: |
          cd terraform
          TF_LOG=DEBUG terraform apply -auto-approve

  deploy_k8s:
    runs-on: ubuntu-latest
    needs: deploy_infra
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/

      - name: Start Minikube
        run: minikube start --driver=docker

      - name: Configure Kubeconfig
        run: |
          mkdir -p ~/.kube
          minikube update-context || echo "Failed to update context"
          minikube kubectl -- config view --raw > ~/.kube/config
          export KUBECONFIG=~/.kube/config
          kubectl config use-context minikube || echo "Failed to set context"

      - name: Verify Kubernetes Context
        run: kubectl config get-contexts

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Apply Kubernetes Configurations
        run: |
          kubectl apply -f servicios/auth-service/deployment.yml
          kubectl apply -f servicios/auth-service/deployment.yml

      - name: Check Kubernetes Pods
        run: kubectl get pods -A

  ansible:
    runs-on: ubuntu-latest
    needs: deploy_k8s
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ansible/hosts.ini ansible/playbook.yml || echo "Ansible playbook failed, but continuing."

  cleanup:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Terraform Destroy
        run: |
          cd terraform
          terraform destroy -auto-approve
