name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Verify Terraform files exist
        run: |
          if [ ! -f "terraform/main.tf" ]; then
            echo "Terraform configuration files not found!"
            exit 1
          fi
        continue-on-error: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Install Docker-Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Validate Docker Credentials
        run: |
          if [[ -z "${{ secrets.DOCKER_USERNAME }}" || -z "${{ secrets.DOCKER_PASSWORD }}" ]]; then
            echo "Docker credentials not set"
            exit 1
          fi
        continue-on-error: true

      - name: Log in to Docker
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t myapp .

      - name: Push Docker image to DockerHub
        run: docker push myapp

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Install Docker-Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Verify Test Configuration File
        run: |
          if [ ! -f "docker/docker-compose.test.yml" ]; then
            echo "Test docker-compose file not found!"
            exit 1
          fi
        continue-on-error: true

      - name: Run Tests
        run: |
          docker-compose -f docker/docker-compose.test.yml up --build
          docker-compose -f docker/docker-compose.test.yml down

  kubernetes:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Verify Kubernetes Directory
        run: |
          if [ ! -d "k8s/" ]; then
            echo "Directory k8s/ not found!"
            exit 1
          fi
        continue-on-error: true

      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/

      - name: Start Minikube
        run: minikube start --driver=docker

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Apply Kubernetes Configurations
        run: kubectl apply -f k8s/ --validate=false

      - name: Check Kubernetes Pods
        run: kubectl get pods -A
