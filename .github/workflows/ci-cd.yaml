name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Verify Terraform directory exists
        run: |
          if [ ! -d "terraform" ]; then
            echo "‚ùå Terraform directory not found!"
            exit 1
          fi

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init -upgrade

      - name: Fix Terraform Plugin Permissions
        run: |
          chmod -R +x .terraform/providers

      - name: Format Terraform files
        run: |
          cd terraform
          terraform fmt -recursive

      - name: Validate Terraform configuration
        run: |
          cd terraform
          terraform validate

  docker:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install Docker-Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Log in to Docker
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build Docker image
        run: docker build -t myapp .

      - name: Push Docker image to DockerHub
        run: docker push myapp

  test:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install Docker-Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Run Tests
        run: |
          docker-compose -f docker-compose.test.yml up --build
          docker-compose -f docker-compose.test.yml down

  deploy_infra:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Apply Terraform Configuration
        run: |
          cd terraform
          terraform apply -auto-approve

  deploy_k8s:
    runs-on: ubuntu-latest
    needs: deploy_infra
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/

      - name: Start Minikube
        run: minikube start --driver=docker

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Apply Kubernetes Configurations
        run: kubectl apply -f k8s/

      - name: Check Kubernetes Pods
        run: kubectl get pods -A

  ansible:
    runs-on: ubuntu-latest
    needs: deploy_k8s
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ansible/hosts.ini ansible/playbook.yml || echo "Ansible playbook failed, but continuing."

  cleanup:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Terraform Destroy
        run: |
          cd terraform
          terraform destroy -auto-approve